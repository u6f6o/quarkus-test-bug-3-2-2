plugins {
    id 'io.quarkus'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.allopen'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("io.quarkus.platform:quarkus-bom:${quarkusVersion}")
    implementation enforcedPlatform("io.quarkus.platform:quarkus-amazon-services-bom:${quarkusVersion}")

    implementation 'io.quarkus:quarkus-amazon-lambda'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-kotlin'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy-reactive-kotlin-serialization-common'

    // required as io.quarkus:quarkus-logging-json does not support ECS directly atm
    implementation 'io.quarkiverse.loggingjson:quarkus-logging-json:3.0.0'

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json'

    implementation 'io.quarkiverse.amazonservices:quarkus-amazon-sns'
    implementation 'software.amazon.awssdk:sts'
    implementation 'software.amazon.awssdk:netty-nio-client'

    implementation 'io.arrow-kt:arrow-core:1.2.0'

    implementation 'commons-codec:commons-codec'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.kotest:kotest-runner-junit5-jvm:5.6.2'
    testImplementation 'io.kotest:kotest-assertions-json:5.6.2'
    testImplementation 'io.kotest.extensions:kotest-assertions-arrow:1.3.3'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test'
    testImplementation 'io.mockk:mockk:1.13.5'
    testImplementation 'io.quarkiverse.mockk:quarkus-junit5-mockk:2.0.0'
    testImplementation 'io.rest-assured:kotlin-extensions:5.3.1'
    testImplementation 'software.amazon.awssdk:sqs'
}

group 'com.acme'
version '1.0.0-SNAPSHOT'

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_17
}
